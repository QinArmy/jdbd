/*
 * Copyright 2023-2043 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.jdbd.session;

import io.jdbd.JdbdException;

/**
 * The representation of a savepoint, which is a point within
 * the current transaction that can be referenced from the
 * <code>Connection.rollback</code> method. When a transaction
 * is rolled back to a savepoint all changes made after that
 * savepoint are undone.
 * <p>
 * SavePoints can be either named or unnamed. Unnamed SavePoints
 * are identified by an ID generated by the underlying data source.
 * <p>
 * This interface is similar to {@code java.sql.Savepoint}
 * ,except that throw {@link JdbdException} not {@code java.sql.SQLException}.
 *<br/>
 *
 * @since 1.0
 */

public interface SavePoint {

    boolean isNamed();

    boolean isIdType();

    /**
     * Retrieves the generated ID for the savepoint that this
     * <code>Savepoint</code> object represents.
     *
     * @return the numeric ID of this savepoint
     * @throws JdbdException if this is a named savepoint
     * @since 1.0
     */
    int id() throws JdbdException;

    /**
     * Retrieves the name of the savepoint that this <code>Savepoint</code>
     * object represents.
     *
     * @return the name of this savepoint
     * @throws JdbdException if this is an un-named savepoint
     * @since 1.0
     */
    String name() throws JdbdException;

    /**
     * override {@link Object#hashCode()}
     */
    @Override
    int hashCode();

    /**
     * override {@link Object#equals(Object)}
     */
    @Override
    boolean equals(Object obj);

    /**
     * override {@link Object#toString()}
     *
     * @return save point info, contain {@link System#identityHashCode(Object)}.
     */
    @Override
    String toString();

}
